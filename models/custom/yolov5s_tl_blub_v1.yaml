# parameters
nc: 12  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple

# anchors
# anchors:
#   - [9,4,  4,9,  6,15]  # P3/8
#   - [17,8,  10,23,  31,14]  # P4/16
#   - [15,36,  49,22,  23,55]  # P5/32

anchors:
    - [4,6,  5,12,  8,8]
    - [13,12,  8,20,  13,31]
    - [32,20,  18,42,  28,59]

# yolov5 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Focus, [64, 3]],  # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, Bottleneck, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 9, Bottleneck, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, Bottleneck, [512]],
   [-1, 1, Conv, [1024, 3, 2]], # 7-P5/32
   [-1, 1, SPP, [1024, [5, 9, 13]]],
   [-1, 3, Bottleneck, [1024]],  # 9
  ]

# yolov5 head
head:
  [[-1, 3, Bottleneck, [1024, False]],  # 10
  #  [-1, 1, nn.Conv2d, [na * (nc + 5), 1, 1, 0]],  # 12 (P5/32-large)

   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 6], 1, Concat, [1]],  # 12 cat backbone P4
   [-1, 1, Conv, [512, 1, 1]],
   [-1, 3, Bottleneck, [512, False]], # 14
  #  [-1, 1, nn.Conv2d, [na * (nc + 5), 1, 1, 0]],  # 17 (P4/16-medium)

   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3
   [-1, 1, Conv, [256, 1, 1]],
   [-1, 3, Bottleneck, [256, False]], # 18
  #  [-1, 1, nn.Conv2d, [na * (nc + 5), 1, 1, 0]],  # 22 (P3/8-small)

   [[18, 14, 10], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]

